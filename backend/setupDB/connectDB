const { MongoClient, ServerApiVersion } = require('mongodb');
const uri="mongodb+srv://userAdmin:motdepasse@mentoringdb.g9iol.mongodb.net/?retryWrites=true&w=majority&appName=MentoringDB"
const client = new MongoClient(uri);
module.exports = client; 
const bcrypt = require('bcrypt'); 



async function addNewUserInDB(Name, Surname, Email, Password, isAdmin, Genre, Tel, NiveauEtudes, Competences){
    const db = client.db("users");
    const collection = db.collection("users");
    let creationDate= new Date();
    let idUser=0;
    //on récupère le dernier idUser
    const lastUser = await collection.findOne({}, {sort:{UserID:-1}});

    //on vérifie si les différents éléments sont déjà utilisés
    const commonUsers=await collection.findOne({
  $or: [
    { email: Email },
    { tel: Tel }
  ]
});
    if(commonUsers){
        console.log("Un utilisateur avec cet email ou ce numéro de téléphone existe déjà dans la base de données");
        return -1;
    }
    

        //hash password
    const hashedPassword = bcrypt.hashSync(Password, 10);

    //on récupère le dernier idUser et on l'incrémente
    idUser=lastUser.UserID+1;
    let emptyArray=[];
    const result = await collection.insertOne({
                    UserID:idUser,
                    name:Name,
                    surname:Surname, 
                    email:Email, 
                    password:hashedPassword, 
                    isAdmin:isAdmin, 
                    genre:Genre, 
                    tel:Tel, 
                    niveauEtudes:NiveauEtudes, 
                    competences:Competences, 
                    nbCourses:0, 
                    nbMentorats:0,
                    postedSearchs:emptyArray, 
                    conversationsID:emptyArray,
                    accountCreation:creationDate});
    console.log("Nouvel utilisateur ajouté dans la base de données :", result);
}



async function checkAllUsernamesInDB(){
    const db = client.db("users");
    const collection = db.collection("users");
    const result = await collection.find({}).toArray();
}

// Exemple 1 : Utilisateur admin
addNewUserInDB(
    "Alice",
    "Dupont",
    "alice.dupont@example.com",
    "password123",
    true,
    "Femme",
    "0601020304",
    "Master",
    ["JavaScript", "React", "MongoDB"]
);

// Exemple 2 : Utilisateur classique, étudiant
addNewUserInDB(
    "Bob",
    "Martin",
    "bob.martin@example.com",
    "securepass456",
    false,
    "Homme",
    "0611223344",
    "Licence",
    ["Python", "Data Analysis"]
);

// Exemple 3 : Utilisateur avec peu de compétences renseignées
addNewUserInDB(
    "Chloé",
    "Durand",
    "chloe.durand@example.com",
    "mypassword789",
    false,
    "Femme",
    "0622334455",
    "Doctorat",
    []
);

// Exemple 4 : Utilisateur admin avec un téléphone invalide
addNewUserInDB(
    "David",
    "Bernard",
    "david.bernard@example.com",
    "adminpass",
    true,
    "Homme",
    "0000000000",
    "BTS",
    ["Gestion de projet", "SCRUM"]
);

// Exemple 5 : Utilisateur avec des compétences diverses
addNewUserInDB(
    "Emma",
    "Leclerc",
    "emma.leclerc@example.com",
    "superpassword",
    false,
    "Femme",
    "0633445566",
    "Bac+2",
    ["Design graphique", "Photoshop", "Illustrator"]
);


  checkAllUsernamesInDB();